SET SERVEROUTPUT ON
SHOW PARAMETER NLS_DATE_FORMAT


SELECT SYSDATE FROM DUAL;


-- TRABALHANDO COM STRINGS
SELECT * FROM COUNTRIES WHERE COUNTRY_NAME = UPPER('Argentina');
SELECT * FROM COUNTRIES WHERE COUNTRY_NAME = INITCAP('Argentina');
SELECT UPPER(COUNTRY_NAME) FROM COUNTRIES;
SELECT * FROM COUNTRIES;

SELECT LOWER(COUNTRY_NAME) FROM COUNTRIES;
SELECT INITCAP(COUNTRY_NAME) FROM COUNTRIES;
SELECT SUBSTR(COUNTRY_NAME, 6) FROM COUNTRIES;
SELECT SUBSTR(COUNTRY_NAME, 6, 2) FROM COUNTRIES;
SELECT LENGTH(COUNTRY_NAME) FROM COUNTRIES;
SELECT INSTR('TESTE', 'E') FROM COUNTRIES;


-- VARIAVÉIS EM TEMPO DE EXECUÇÃO
UNDEFINE VARIAVEL
SELECT * FROM COUNTRIES WHERE REGION_ID = '&&VARIAVEL';
-- OU 
SELECT * FROM COUNTRIES WHERE REGION_ID = '&&VARIAVEL';
-- OU
SELECT * FROM COUNTRIES WHERE REGION_ID = '&VARIAVEL';


-- MOSTRA PLANO DE EXECUÇÃO
EXPLAIN PLAN FOR
SELECT * FROM COUNTRIES;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);


-- MOSTRA TODAS AS TABELAS
SELECT * FROM DBA_TABLES;
SELECT * FROM DBA_TABLES WHERE TABLE_NAME = 'TOP_FIELD';
SELECT TABLESPACE_NAME, TABLE_NAME FROM DBA_TABLES ORDER BY TABLESPACE_NAME; 
SELECT TABLESPACE_NAME, TABLE_NAME FROM DBA_TABLES WHERE TABLESPACE_NAME = 'USERS'; 
SELECT TABLESPACE_NAME, TABLE_NAME FROM DBA_TABLES WHERE TABLESPACE_NAME = 'SYSTEM'


-- MOSTRA USURIOS E SUAS TABLESPACES
SELECT * FROM DBA_USERS;
SELECT USERNAME, DEFAULT_TABLESPACE, TEMPORARY_TABLESPACE FROM DBA_USERS;


-- MOSTRA AS TABLESPACES 
SELECT * FROM DBA_TABLESPACES;


-- CRIANDO TABLESPACE
CREATE TABLESPACE PROTHEUS DATAFILE 'C:\Oraclexe\app\oracle\oradata\XE\PROTHEUS.dbf' SIZE 100M AUTOEXTEND ON MAXSIZE UNLIMITED ONLINE;
CREATE TABLESPACE PROTHEUS_IND DATAFILE 'C:\Oraclexe\app\oracle\oradata\XE\PROTHEUS_IND.dbf' SIZE 100M AUTOEXTEND ON NEXT 100M EXTENT MANAGEMENT LOCAL ONLINE;


-- CRIANDO TABLESPACE TEMPORARY
CREATE TEMPORARY TABLESPACE PROTHEUS_TEMP TEMPFILE 'C:\Oraclexe\app\oracle\oradata\XE\PROTHEUS_TEMP.dbf' SIZE 100M;


-- ALTERANDO TABLESPACE DE USUÁRIO
ALTER USER protheus TEMPORARY TABLESPACE PROTHEUS_TEMP;
ALTER USER protheus DEFAULT TABLESPACE PROTHEUS;


-- ROLES
GRANT "RESOURCE" TO protheus WITH ADMIN OPTION;
GRANT "DBA" TO protheus WITH ADMIN OPTION;
GRANT "CONNECT" TO protheus WITH ADMIN OPTION;
ALTER USER protheus DEFAULT ROLE "RESOURCE","DBA","CONNECT";


-- QUOTAS
ALTER USER protheus QUOTA UNLIMITED ON SYSTEM;
ALTER TABLE XXS990 MODIFY(XXS_TEXT1 CHAR(256));
ALTER TABLE XXG990 MODIFY(XXG_TEXT CHAR(62));


-- DECLARAÇÃO DE BLOCO
DECLARE 
  X COUNTRIES.COUNTRY_NAME%TYPE;
  NOME VARCHAR2(10) := 'HOUSTON';
  NUMERO NUMBER(2) NOT NULL := 10;
  NUMERO2 NUMBER(4,2) := 7.75;
  DATA_NASCIMENTO DATE;
BEGIN
  DATA_NASCIMENTO := TO_DATE('25/05/1983', 'DD/MM/YYYY');
  SELECT COUNTRY_NAME INTO X FROM COUNTRIES WHERE COUNTRY_ID = 'AR'; 
  DBMS_OUTPUT.PUT_LINE(X || ' - ' || NOME || ' - ' || NUMERO || ' - ' || NUMERO2 || ' - ' || DATA_NASCIMENTO);
END;
/


-- LOOP SIMPLES
DECLARE
  A NUMBER(2,0) := 5;
BEGIN
  LOOP
    A := A - 1;
    DBMS_OUTPUT.PUT_LINE(A);
    EXIT WHEN (A = 0);
  END LOOP;
  
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- LOOP SIMPLES IMPARES
DECLARE
  A NUMBER(2,0) := 1;
BEGIN
  LOOP
    DBMS_OUTPUT.PUT_LINE(A);
    A := A + 2;
    EXIT WHEN (A = 13);
  END LOOP;

  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- LOOP FOR
DECLARE 
  A NUMBER(2,0) := 5;
BEGIN
  FOR A IN 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE(A);
  END LOOP;
  
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- LOOP FOR REVERSO
DECLARE 
  A NUMBER(2,0) := 5;
BEGIN
  FOR A IN REVERSE 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE(A);
  END LOOP;
  
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- LOOP WHILE
DECLARE 
  A NUMBER(2,0) := 5;
BEGIN
  WHILE(A >= 0) LOOP
    DBMS_OUTPUT.PUT_LINE(A);
    A := A - 1;
  END LOOP;
  
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- CURSOR EXPLÍCIDO (WHILE)
DECLARE
  CURSOR DEP IS SELECT DEPARTMENT_NAME, MANAGER_ID FROM DEPARTMENTS;
  DEPARTAMENTO DEPARTMENTS%ROWTYPE;
BEGIN
  OPEN DEP;
    FETCH DEP INTO DEPARTAMENTO.DEPARTMENT_NAME, DEPARTAMENTO.MANAGER_ID;
    WHILE(DEP%FOUND) LOOP
      DBMS_OUTPUT.PUT_LINE(DEPARTAMENTO.DEPARTMENT_NAME || '-' || DEPARTAMENTO.MANAGER_ID);
      FETCH DEP INTO DEPARTAMENTO.DEPARTMENT_NAME, DEPARTAMENTO.MANAGER_ID;
    END LOOP;
  CLOSE DEP;
    
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- CURSOR EXPLÍCIDO (FOR)
BEGIN
  FOR I IN (SELECT DEPARTMENT_NAME, MANAGER_ID FROM DEPARTMENTS) LOOP
    DBMS_OUTPUT.PUT_LINE(I.DEPARTMENT_NAME || '-' || I.MANAGER_ID);
  END LOOP;
        
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/


-- CURSOR EXPLÍCIDO (LOOP)
DECLARE
  CURSOR DEP IS SELECT DEPARTMENT_NAME, MANAGER_ID FROM DEPARTMENTS;
  DEPARTAMENTO DEPARTMENTS%ROWTYPE;
BEGIN
  OPEN DEP;
    LOOP
      --DBMS_OUTPUT.PUT_LINE(DEPARTAMENTO.DEPARTMENT_NAME || '-' || DEPARTAMENTO.MANAGER_ID);
      FETCH DEP INTO DEPARTAMENTO.DEPARTMENT_NAME, DEPARTAMENTO.MANAGER_ID;
      DBMS_OUTPUT.PUT_LINE(DEPARTAMENTO.DEPARTMENT_NAME || '-' || DEPARTAMENTO.MANAGER_ID);
      EXIT WHEN (DEP%NOTFOUND);
    END LOOP;
  CLOSE DEP;
    
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('OPS! ERRO');
END;
/
